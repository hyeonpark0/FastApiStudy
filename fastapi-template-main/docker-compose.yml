version: '3.8'
services:

  postgres:
    container_name: postgresql
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - DB_HOST=${DB_HOST}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_SCHEMA}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./app/db/sql/creates.postgres:/docker-entrypoint-initdb.d/create_tables.sql
      - ./app/db/sql/inserts.postgres:/docker-entrypoint-initdb.d/fill_tables.sql

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '5431:80'
    depends_on:
      - postgres

  mysql:
    container_name: mysql
    image: 'mysql:latest'
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_SCHEMA}
      #MYSQL_USER: ${DB_USER}
      #MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./app/db/sql/init.mysql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '3306:3306'

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - '8080:8081'

  python:
    container_name: python3.10
    build:
      context: .
      dockerfile: ./Dockerfile
    image: python3.10-fastapi
    volumes:
      - ./:/code
    env_file:
      - .env
    environment:
      - DB_HOST=host.docker.internal
    ports:
      - '8001:80'